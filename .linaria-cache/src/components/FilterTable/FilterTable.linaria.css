.s1cxy1dy{padding:1rem;}.s1cxy1dy table{border-spacing:0;border:1px solid black;}.s1cxy1dy table tr:last-child td{border-bottom:0;}.s1cxy1dy table th,.s1cxy1dy table td{margin:0;padding:0.5rem;border-bottom:1px solid black;border-right:1px solid black;}.s1cxy1dy table th:last-child,.s1cxy1dy table td:last-child{border-right:0;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb21wb25lbnRzL0ZpbHRlclRhYmxlL0ZpbHRlclRhYmxlLmpzIl0sIm5hbWVzIjpbIi5zMWN4eTFkeSJdLCJtYXBwaW5ncyI6IkFBVU1BIiwiZmlsZSI6InNyYy9jb21wb25lbnRzL0ZpbHRlclRhYmxlL0ZpbHRlclRhYmxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge3VzZU1lbW99IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHtzdHlsZWR9IGZyb20gXCJsaW5hcmlhL3JlYWN0XCI7XG5pbXBvcnQge3VzZVRhYmxlLCB1c2VGaWx0ZXJzLCB1c2VHbG9iYWxGaWx0ZXIsIHVzZVNvcnRCeX0gZnJvbSBcInJlYWN0LXRhYmxlXCI7XG5pbXBvcnQge1xuICBHbG9iYWxGaWx0ZXIsXG4gIGZ1enp5VGV4dEZpbHRlckZuLFxuICBEZWZhdWx0Q29sdW1uRmlsdGVyLFxuICBNQVhfSVRFTVMsXG59IGZyb20gXCIuL2ZpbHRlcnNcIjtcblxuY29uc3QgU3R5bGVzID0gc3R5bGVkLmRpdmBcbiAgcGFkZGluZzogMXJlbTtcblxuICB0YWJsZSB7XG4gICAgYm9yZGVyLXNwYWNpbmc6IDA7XG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG5cbiAgICB0ciB7XG4gICAgICA6bGFzdC1jaGlsZCB7XG4gICAgICAgIHRkIHtcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGgsXG4gICAgdGQge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZzogMC41cmVtO1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGJsYWNrO1xuICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgYmxhY2s7XG5cbiAgICAgIDpsYXN0LWNoaWxkIHtcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxuYDtcblxuLy8gTGV0IHRoZSB0YWJsZSByZW1vdmUgdGhlIGZpbHRlciBpZiB0aGUgc3RyaW5nIGlzIGVtcHR5XG4vL2Z1enp5VGV4dEZpbHRlckZuLmF1dG9SZW1vdmUgPSB2YWwgPT4gIXZhbFxuXG4vLyBPdXIgdGFibGUgY29tcG9uZW50XG5mdW5jdGlvbiBUYWJsZSh7Y29sdW1ucywgZGF0YSwgaW5pdGlhbFN0YXRlfSkge1xuICBjb25zdCBmaWx0ZXJUeXBlcyA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIC8vIEFkZCBhIG5ldyBmdXp6eVRleHRGaWx0ZXJGbiBmaWx0ZXIgdHlwZS5cbiAgICAgIGZ1enp5VGV4dDogZnV6enlUZXh0RmlsdGVyRm4sXG4gICAgICAvLyBPciwgb3ZlcnJpZGUgdGhlIGRlZmF1bHQgdGV4dCBmaWx0ZXIgdG8gdXNlXG4gICAgICAvLyBcInN0YXJ0V2l0aFwiXG4gICAgICB0ZXh0OiAocm93cywgaWQsIGZpbHRlclZhbHVlKSA9PiB7XG4gICAgICAgIHJldHVybiByb3dzLmZpbHRlcigocm93KSA9PiB7XG4gICAgICAgICAgY29uc3Qgcm93VmFsdWUgPSByb3cudmFsdWVzW2lkXTtcblxuICAgICAgICAgIHJldHVybiByb3dWYWx1ZSAhPT0gXCJ1bmRlZmluZWRcIlxuICAgICAgICAgICAgPyBTdHJpbmcocm93VmFsdWUpXG4gICAgICAgICAgICAgIC50b0xvd2VyQ2FzZSgpXG4gICAgICAgICAgICAgIC5zdGFydHNXaXRoKFN0cmluZyhmaWx0ZXJWYWx1ZSkudG9Mb3dlckNhc2UoKSlcbiAgICAgICAgICAgIDogdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgIH0pLFxuICAgIFtdXG4gICk7XG5cbiAgY29uc3QgZGVmYXVsdENvbHVtbiA9IHVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIC8vIExldCdzIHNldCB1cCBvdXIgZGVmYXVsdCBGaWx0ZXIgVUlcbiAgICAgIEZpbHRlcjogRGVmYXVsdENvbHVtbkZpbHRlcixcbiAgICB9KSxcbiAgICBbXVxuICApO1xuXG4gIGNvbnN0IHtcbiAgICBnZXRUYWJsZVByb3BzLFxuICAgIGdldFRhYmxlQm9keVByb3BzLFxuICAgIGhlYWRlckdyb3VwcyxcbiAgICByb3dzLFxuICAgIHByZXBhcmVSb3csXG4gICAgc3RhdGUsXG4gICAgdmlzaWJsZUNvbHVtbnMsXG4gICAgcHJlR2xvYmFsRmlsdGVyZWRSb3dzLFxuICAgIHNldEdsb2JhbEZpbHRlcixcbiAgfSA9IHVzZVRhYmxlKFxuICAgIHtcbiAgICAgIGNvbHVtbnMsXG4gICAgICBkYXRhLFxuICAgICAgZGVmYXVsdENvbHVtbiwgLy8gQmUgc3VyZSB0byBwYXNzIHRoZSBkZWZhdWx0Q29sdW1uIG9wdGlvblxuICAgICAgZmlsdGVyVHlwZXMsXG4gICAgICBpbml0aWFsU3RhdGUsXG4gICAgfSxcbiAgICB1c2VGaWx0ZXJzLCAvLyB1c2VGaWx0ZXJzIVxuICAgIHVzZUdsb2JhbEZpbHRlciwgLy8gdXNlR2xvYmFsRmlsdGVyIVxuICAgIHVzZVNvcnRCeVxuICApO1xuXG4gIC8vIFdlIGRvbid0IHdhbnQgdG8gcmVuZGVyIGFsbCBvZiB0aGUgcm93cyBmb3IgdGhpcyBleGFtcGxlLCBzbyBjYXBcbiAgLy8gaXQgZm9yIHRoaXMgdXNlIGNhc2VcbiAgY29uc3QgZmlyc3RQYWdlUm93cyA9IHJvd3Muc2xpY2UoMCwgTUFYX0lURU1TKTtcblxuICByZXR1cm4gKFxuICAgIDx0YWJsZSB7Li4uZ2V0VGFibGVQcm9wcygpfT5cbiAgICAgIDx0aGVhZD5cbiAgICAgICAgPHRyPlxuICAgICAgICAgIDx0aFxuICAgICAgICAgICAgY29sU3Bhbj17dmlzaWJsZUNvbHVtbnMubGVuZ3RofVxuICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImxlZnRcIixcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPEdsb2JhbEZpbHRlclxuICAgICAgICAgICAgICBwcmVHbG9iYWxGaWx0ZXJlZFJvd3M9e3ByZUdsb2JhbEZpbHRlcmVkUm93c31cbiAgICAgICAgICAgICAgZ2xvYmFsRmlsdGVyPXtzdGF0ZS5nbG9iYWxGaWx0ZXJ9XG4gICAgICAgICAgICAgIHNldEdsb2JhbEZpbHRlcj17c2V0R2xvYmFsRmlsdGVyfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L3RoPlxuICAgICAgICA8L3RyPlxuXG4gICAgICAgIHtoZWFkZXJHcm91cHMubWFwKChoZWFkZXJHcm91cCkgPT4gKFxuICAgICAgICAgIDx0ciBrZXk9e2hlYWRlckdyb3VwLmlkfSB7Li4uaGVhZGVyR3JvdXAuZ2V0SGVhZGVyR3JvdXBQcm9wcygpfT5cbiAgICAgICAgICAgIHtoZWFkZXJHcm91cC5oZWFkZXJzLm1hcCgoY29sdW1uKSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IGlzU29ydGVkID0gY29sdW1uLmlkID09PSAnY3JlYXRlZHRpbWUnO1xuXG4gICAgICAgICAgICAgIGNvbnN0IGhlYWRlclByb3BzID0gY29sdW1uLmdldEhlYWRlclByb3BzKGlzU29ydGVkICYmIGNvbHVtbi5nZXRTb3J0QnlUb2dnbGVQcm9wcygpKTtcblxuICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDx0aFxuICAgICAgICAgICAgICAgICAga2V5PXtjb2x1bW4uaWR9XG4gICAgICAgICAgICAgICAgICB7Li4uaGVhZGVyUHJvcHN9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAge2NvbHVtbi5yZW5kZXIoXCJIZWFkZXJcIil9XG5cbiAgICAgICAgICAgICAgICAgIDxkaXY+e2NvbHVtbi5jYW5GaWx0ZXIgPyBjb2x1bW4ucmVuZGVyKFwiRmlsdGVyXCIpIDogbnVsbH08L2Rpdj5cblxuICAgICAgICAgICAgICAgICAge2lzU29ydGVkICYmIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICB7Y29sdW1uLmlzU29ydGVkXG4gICAgICAgICAgICAgICAgICAgICAgPyBjb2x1bW4uaXNTb3J0ZWREZXNjXG4gICAgICAgICAgICAgICAgICAgICAgICA/IFwiIPCflL1cIlxuICAgICAgICAgICAgICAgICAgICAgICAgOiBcIiDwn5S8XCJcbiAgICAgICAgICAgICAgICAgICAgICA6IFwiXCJ9XG4gICAgICAgICAgICAgICAgICA8L3NwYW4+fVxuICAgICAgICAgICAgICAgIDwvdGg+XG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9KX1cbiAgICAgICAgICA8L3RyPlxuICAgICAgICApKX1cbiAgICAgIDwvdGhlYWQ+XG4gICAgICA8dGJvZHkgey4uLmdldFRhYmxlQm9keVByb3BzKCl9PlxuICAgICAgICB7Zmlyc3RQYWdlUm93cy5tYXAoKHJvdykgPT4ge1xuICAgICAgICAgIHByZXBhcmVSb3cocm93KTtcblxuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8dHIga2V5PXtyb3cuaWR9IHsuLi5yb3cuZ2V0Um93UHJvcHMoKX0+XG4gICAgICAgICAgICAgIHtyb3cuY2VsbHMubWFwKChjZWxsLCBjZWxsSW5kZXgpID0+IChcbiAgICAgICAgICAgICAgICA8dGQga2V5PXtgJHtyb3cuaWR9Y2VsbDoke2NlbGxJbmRleH1gfSB7Li4uY2VsbC5nZXRDZWxsUHJvcHMoKX0+XG4gICAgICAgICAgICAgICAgICB7Y2VsbC5yZW5kZXIoXCJDZWxsXCIpfVxuICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvdGJvZHk+XG4gICAgPC90YWJsZT5cbiAgKTtcbn1cblxuZXhwb3J0IGNvbnN0IEZpbHRlclRhYmxlV3JhcHBlciA9ICh7Y29sdW1ucyA9IFtdLCBkYXRhID0gW10sIGluaXRpYWxTdGF0ZSA9IFtdfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxTdHlsZXM+XG4gICAgICA8VGFibGUgY29sdW1ucz17Y29sdW1uc30gZGF0YT17ZGF0YX0gaW5pdGlhbFN0YXRlPXtpbml0aWFsU3RhdGV9IC8+XG4gICAgPC9TdHlsZXM+XG4gICk7XG59O1xuIl19*/